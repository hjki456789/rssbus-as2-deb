<rsb:script xmlns:rsb="http://www.rssbus.com/ns/rsbscript/2">

  <!--include config-->
  <rsb:include file="../../config.rst"/>

  <rsb:info title="createPartner" desc="Creates a trading partner">
    <input  name="neworgname"                   desc="The organization Name." required="true"/>
    <input  name="as2identifier"                desc="The AS2 Identifier." />
    <input  name="maxattempts"                  desc="Maximum number of retries" />
    <input  name="sslclientcertfile"            desc="Path to PFX file containing the certificate" />
    <input  name="automationenabled"            desc="If true, enable automation" />
    <input  name="ftpremotehost"                desc="FTP remote host name" />
    <input  name="sslclientcertpwd"             desc="Password for client cert" />
    <input  name="sslclientcertsubject"         desc="Subject for client cert" />
    <input  name="signincoming"                 desc="If true, incoming messages must be signed" />
    <input  name="cmdbeforesendargs"            desc="Arguments to before-send command" />
    <input  name="cmdafterrecv"                 desc="Command to execute after receive" />
    <input  name="usehttpauth"                  desc="If true, use HTTP authentication" />
    <input  name="ftpuploaddir"                 desc="Folder where files in the outgoing dir should be uploaded" />
    <input  name="ftpdownloadfiles"             desc="If true, download files from the remote server to the incoming directory" />
    <input  name="cmdbeforesend"                desc="Command to execute before send" />
    <input  name="encryptcert"                  desc="Encryption certificate" />
    <input  name="ftpsslservercert"             desc="FTP SSL Server Certificate" />
    <input  name="type"                         desc="Partner type" default="[site.supportPartnerType]" />
    <input  name="encryptincoming"              desc="If true, incoming messages must be encrypted" />
    <input  name="signcert"                     desc="Signing certificate" />
    <input  name="ftpport"                      desc="FTP remote Port" />
    <input  name="reqmdnsigned"                 desc="Should MDNs be signed or unsigned?" />
    <input  name="ftpoverwritelocal"            desc="If true, overwrite local files" />
    <input  name="ftppollinginterval"           desc="FTP Polling interval (minutes)" />
    <input  name="ftpdeldownloaded"             desc="If true, delete downloaded files" />
    <input  name="ftpssltype"                   desc="Type of SSL to use for FTP connections" />
    <input  name="ftpuser"                      desc="FTP user name" />
    <input  name="ftppassword"                  desc="FTP password" />
    <input  name="requestmdn"                   desc="If true, request an MDN receipt" />
    <input  name="ftpuploadfiles"               desc="If true, upload files from the outgoing dir to the remote server" />
    <input  name="retryinterval"                desc="The retry interval, in minutes" />
    <input  name='safeinterval'                 desc='The safe interval for sending or uploading, in seconds'/>
    <input  name="sendmailonautomationerror"    desc="If true, send an email to administration if an error is encountered during automation" />
    <input  name='localas2identifier'           desc='Local as2 identifier'/>
    <input  name='alternatecert'                desc='Alternate cert'/>
    <input  name='alternatecertsubject'         desc='Alternate cert subject'/>
    <input  name='alternatecertpassword'        desc='Alternate cert password'/>
    <input  name="cmdaftersend"                 desc="Command to execute after send" />
    <input  name="friendlyname"                 desc="The friendly name" />
    <input  name="httpauthtype"                 desc="HTTP authentication type (basic, digest)" />
    <input  name="compressoutgoing"             desc="If true, outgoing messages are compressed" />
    <input  name="connectiontimeout"            desc="Connection Timeout in seconds" />
    <input  name='forcefipscompliance'          desc='If true, force FIPS compliance'/>
    <input  name='supportrestart'               desc='If true, the partner will support the restart feature of AS2.'/>
    <input  name='supportchunkedencoding'       desc='If true, the partner will support the chunked encoding feature of AS2.'/>
    <input  name="reqmdnsync"                   desc="Should MDNs be synchronous or asynchronous?" />
    <input  name="httpauthuser"                 desc="HTTP authentication user name" />
    <input  name="cmdafterrecvargs"             desc="Arguments to after-receive command" />
    <input  name="signoutgoing"                 desc="If true, outgoing messages are signed" />
    <input  name="httpauthpwd"                  desc="HTTP authentication password" />
    <input  name="url"                          desc="Partner URL" />
    <input  name="encryptoutgoing"              desc="If true, outgoing messages are encrypted" />
    <input  name="cmdaftersendargs"             desc="Arguments to after-send command" />
    <input  name="ftpdownloaddir"               desc="Path to the download folder on the remote server" />
    <input  name="sslacceptcert"                desc="The SSL certificate accept mode. Supported values are * (Accepts all certificates), TRUSTED (Accepts certificates trusted by the server machine), [Certificate Filename] and [Certificate Base64 Encoded String]." />
    <input  name="lastpoll"                     desc="FTP last poll." />
    <input  name="save"                         desc="FTP last poll." />
    <input  name='authmode'                     desc='SFTP Authentication Mode'/>
    <input  name='sshclientcert'                desc='SFTP ssh client private key file. (PEM format)'/>
    <input  name='sshclientcertpassword'        desc='Password of SFTP ssh client private key file'/>
    <input  name='serverhostkey'                desc='Public key of the SFTP server which are connecting to.'/>
    <input  name='clientssidcode'               desc='The identification code of the client. ' />
    <input  name='clientpassword'               desc='The password assigned to the client in the bilateral agreement.' />
    <input  name='serverssidcode'               desc='The identification code of the server.' />
    <input  name='serverpassword'               desc='The password assigned to the server in the bilateral agreement.' />
    <input  name='oftpversion'                  desc='Specify which version of the oftp protocol the component is using. (Ver1.2 is 0, Ver 1.3 is 1, Ver 1.4 is 2, Ver 2.0 is 3)' default='3' />
    <output name="a2p:orgname"                  desc="The organization Name."/>
    <output name="a2p:warning#"                 desc="Any warning messages during an update"/>
    <output name="a2p:certExpMsg"               desc="Any Certificate expiration messages"/>
    <output name="a2p:certWarning"              desc="Any Certificate Warnings"/>
  </rsb:info>

  <rsb:call op="[service.setPartner]" output="out">
    <rsb:push title="[rss:title | def('untitled item')]" description="[out.*]"/>
  </rsb:call>

</rsb:script>

